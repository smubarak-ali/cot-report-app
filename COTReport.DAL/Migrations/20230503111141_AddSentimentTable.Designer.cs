// <auto-generated />
using System;
using COTReport.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace COTReport.DAL.Migrations
{
    [DbContext(typeof(ReportDbContext))]
    [Migration("20230503111141_AddSentimentTable")]
    partial class AddSentimentTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("COTReport.DAL.Entity.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ChangeInLong")
                        .HasColumnType("numeric")
                        .HasColumnName("change_long");

                    b.Property<decimal?>("ChangeInShort")
                        .HasColumnType("numeric")
                        .HasColumnName("change_short");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Instrument")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instrument");

                    b.Property<decimal?>("PercentOfLong")
                        .HasColumnType("numeric")
                        .HasColumnName("percent_long");

                    b.Property<decimal?>("PercentOfShort")
                        .HasColumnType("numeric")
                        .HasColumnName("percent_short");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("report_date");

                    b.Property<decimal>("TotalLong")
                        .HasColumnType("numeric")
                        .HasColumnName("total_long");

                    b.Property<decimal>("TotalShort")
                        .HasColumnType("numeric")
                        .HasColumnName("total_short");

                    b.HasKey("Id");

                    b.ToTable("cot_reports", (string)null);
                });

            modelBuilder.Entity("COTReport.DAL.Entity.Sentiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LongPercentage")
                        .HasColumnType("integer")
                        .HasColumnName("long_percent");

                    b.Property<int>("LongPosition")
                        .HasColumnType("integer")
                        .HasColumnName("long_position");

                    b.Property<string>("PairName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("record_date");

                    b.Property<int>("ShortPercentage")
                        .HasColumnType("integer")
                        .HasColumnName("short_percent");

                    b.Property<int>("ShortPosition")
                        .HasColumnType("integer")
                        .HasColumnName("short_position");

                    b.HasKey("Id");

                    b.ToTable("sentiment", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
